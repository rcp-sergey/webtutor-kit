{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "DAPI autogenerated oapi documentation",
    "description": "DAPI"
  },
  "servers": [
    {
      "url": "http://localhost/api/v1",
      "description": "Удаленный сервер"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "SessionID"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Код состояния ответа \"HTTP 400 Bad Request\" указывает, что сервер не смог понять запрос из-за недействительного синтаксиса. Клиент не должен повторять этот запрос без изменений.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "description": "HTTP код ответа",
                  "example": 400
                }
              }
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Код ответа на статус ошибки HTTP 401 Unauthorized клиента указывает, что запрос не был применён, поскольку ему не хватает действительных учётных данных для целевого ресурса.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Код ответа на статус ошибки \"HTTP 403 Forbidden\" указывает, что сервер понял запрос, но отказывается его авторизовать.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Код ответа на ошибку HTTP 404 Not Found указывает, что сервер не может найти запрошенный ресурс. Ссылки, ведущие к коду 404, часто называются сломанными или мёртвыми связями и приводят к ссылочной гнили",
        "content": {
          "application/json": {
            "schema": {
              "description": "Пример плохого ответа",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "description": "HTTP код ответа",
                  "example": 404
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "Код ответа сервера 500 Internal Server Error указывает на то, что сервер столкнулся с неожиданной ошибкой, которая помешала ему выполнить запрос.",
        "content": {
          "application/json": {
            "schema": {
              "description": "Пример плохого ответа",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "description": "HTTP код ответа",
                  "example": 500
                }
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Код ответа сервера 503 Service Unavailable указывает на то, что сервер недоступен.",
        "content": {
          "application/json": {
            "schema": {
              "description": "Пример плохого ответа",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Статус выполнения запроса",
                  "example": "failure"
                },
                "error": {
                  "type": "boolean",
                  "description": "Произошла ошибка",
                  "example": true
                },
                "error_text": {
                  "type": "string",
                  "description": "Текст ошибки"
                },
                "code": {
                  "type": "integer",
                  "description": "HTTP код ответа",
                  "example": 503
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "IdNameObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "xAppId": {
        "in": "header",
        "description": "ID приложения",
        "name": "x-app-id",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "cookieAuth": []
    },
    {
      "basicAuth": []
    }
  ],
  "paths": {}
}
